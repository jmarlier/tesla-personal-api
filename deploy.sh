#!/bin/bash

# ================================
# Script de d√©ploiement - Tesla App
# Serveur: Cocotier (app.jeromemarlier.com)
# ================================

set -e  # Arr√™ter en cas d'erreur

# Couleurs pour l'affichage
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Configuration
SERVER_USER="duda6304"
SERVER_HOST="cocotier.o2switch.net"
SERVER_PATH="/home/duda6304/app.jeromemarlier.com"
GIT_REMOTE="cocotier"
GIT_BRANCH="master"

echo -e "${BLUE}‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó${NC}"
echo -e "${BLUE}‚ïë   üöÄ D√©ploiement Tesla App ‚Üí Cocotier     ‚ïë${NC}"
echo -e "${BLUE}‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó${NC}"
echo ""

# ================================
# √âtape 1 : V√©rifications locales
# ================================
echo -e "${YELLOW}üìã √âtape 1/6 : V√©rifications locales...${NC}"

# V√©rifier qu'on est dans le bon dossier
if [ ! -f "setup-dashboard.php" ]; then
    echo -e "${RED}‚ùå Erreur : fichier setup-dashboard.php non trouv√©${NC}"
    echo -e "${RED}   Ex√©cutez ce script depuis la racine du projet${NC}"
    exit 1
fi

# V√©rifier Git
if ! git rev-parse --git-dir > /dev/null 2>&1; then
    echo -e "${RED}‚ùå Erreur : Ce n'est pas un repository Git${NC}"
    exit 1
fi

# V√©rifier qu'il n'y a pas de fichiers non commit√©s
if ! git diff-index --quiet HEAD --; then
    echo -e "${YELLOW}‚ö†Ô∏è  Vous avez des modifications non commit√©es${NC}"
    echo ""
    git status --short
    echo ""
    read -p "Voulez-vous continuer le d√©ploiement ? (o/N) " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Oo]$ ]]; then
        echo -e "${RED}‚ùå D√©ploiement annul√©${NC}"
        exit 1
    fi
fi

echo -e "${GREEN}‚úÖ V√©rifications locales OK${NC}"
echo ""

# ================================
# √âtape 2 : Git Push
# ================================
echo -e "${YELLOW}üì§ √âtape 2/6 : Push vers Git...${NC}"

# R√©cup√©rer le dernier commit
LAST_COMMIT=$(git log -1 --pretty=format:"%h - %s")

# Push vers GitHub (origin)
echo "üì¶ Push vers GitHub (origin)..."
if git push origin $GIT_BRANCH; then
    echo -e "${GREEN}‚úÖ Push GitHub r√©ussi${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  Erreur lors du push GitHub (non bloquant)${NC}"
fi

# Push vers Cocotier (serveur de production)
echo "üöÄ Push vers Cocotier (serveur)..."
if git push $GIT_REMOTE $GIT_BRANCH; then
    echo -e "${GREEN}‚úÖ Push Cocotier r√©ussi${NC}"
    echo -e "   ${BLUE}Dernier commit : $LAST_COMMIT${NC}"
else
    echo -e "${RED}‚ùå Erreur lors du push vers Cocotier${NC}"
    exit 1
fi
echo ""

# ================================
# √âtape 3 : Connexion au serveur
# ================================
echo -e "${YELLOW}üîå √âtape 3/6 : Connexion au serveur cocotier...${NC}"

# V√©rifier la connexion SSH
if ! ssh -o BatchMode=yes -o ConnectTimeout=5 $SERVER_USER@$SERVER_HOST exit 2>/dev/null; then
    echo -e "${RED}‚ùå Impossible de se connecter √† cocotier${NC}"
    echo -e "${RED}   V√©rifiez votre connexion SSH${NC}"
    exit 1
fi

echo -e "${GREEN}‚úÖ Connexion SSH √©tablie${NC}"
echo ""

# ================================
# √âtape 4 : D√©ploiement sur le serveur
# ================================
echo -e "${YELLOW}üöÄ √âtape 4/6 : D√©ploiement sur cocotier...${NC}"

ssh $SERVER_USER@$SERVER_HOST << 'ENDSSH'
    set -e
    
    APP_DIR="/home/duda6304/app.jeromemarlier.com"
    REPO_URL="ssh://duda6304@cocotier.o2switch.net/home/duda6304/repos/app.git"
    
    # V√©rifier si le dossier existe et est un repo Git
    if [ -d "$APP_DIR/.git" ]; then
        echo "üìÇ Navigation vers le dossier du projet..."
        cd "$APP_DIR"
        
        echo "üì• Pull des derni√®res modifications..."
        git pull
    else
        echo "üìÇ Le dossier n'est pas un repo Git, clonage..."
        
        # Backup de l'ancien dossier si existe
        if [ -d "$APP_DIR" ]; then
            echo "üíæ Backup de l'ancien dossier..."
            mv "$APP_DIR" "${APP_DIR}.backup.$(date +%Y%m%d-%H%M%S)"
        fi
        
        # Cloner le repository
        echo "üì• Clonage du repository..."
        git clone "$REPO_URL" "$APP_DIR"
        cd "$APP_DIR"
    fi
    
    echo "üì¶ Installation des d√©pendances Composer..."
    composer install --no-dev --optimize-autoloader
    
    echo "üîß Configuration des permissions..."
    chmod -R 755 .
    chmod -R 775 var/ 2>/dev/null || mkdir -p var && chmod -R 775 var/
    
    echo "‚úÖ D√©ploiement serveur termin√©"
ENDSSH

if [ $? -eq 0 ]; then
    echo -e "${GREEN}‚úÖ D√©ploiement sur cocotier r√©ussi${NC}"
else
    echo -e "${RED}‚ùå Erreur lors du d√©ploiement sur cocotier${NC}"
    exit 1
fi
echo ""

# ================================
# √âtape 5 : V√©rifications post-d√©ploiement
# ================================
echo -e "${YELLOW}üîç √âtape 5/6 : V√©rifications post-d√©ploiement...${NC}"

# V√©rifier que l'application r√©pond
SITE_URL="https://app.jeromemarlier.com"
HTTP_CODE=$(curl -s -o /dev/null -w "%{http_code}" $SITE_URL)

if [ "$HTTP_CODE" -eq 200 ] || [ "$HTTP_CODE" -eq 302 ]; then
    echo -e "${GREEN}‚úÖ Site accessible (HTTP $HTTP_CODE)${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  Site r√©pond avec HTTP $HTTP_CODE${NC}"
fi
echo ""

# ================================
# √âtape 6 : R√©sum√©
# ================================
echo -e "${YELLOW}üìä √âtape 6/6 : R√©sum√© du d√©ploiement${NC}"
echo ""
echo -e "${GREEN}‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó${NC}"
echo -e "${GREEN}‚ïë   ‚úÖ D√âPLOIEMENT R√âUSSI                    ‚ïë${NC}"
echo -e "${GREEN}‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó${NC}"
echo ""
echo -e "${BLUE}üìç Serveur     : ${NC}$SERVER_HOST"
echo -e "${BLUE}üë§ Utilisateur : ${NC}$SERVER_USER"
echo -e "${BLUE}üìÇ Chemin      : ${NC}$SERVER_PATH"
echo -e "${BLUE}üåø Branche     : ${NC}$GIT_BRANCH"
echo -e "${BLUE}üìù Commit      : ${NC}$LAST_COMMIT"
echo -e "${BLUE}üåê URL         : ${NC}$SITE_URL"
echo ""
echo -e "${GREEN}üéâ Votre application est en ligne !${NC}"
echo ""
echo -e "${BLUE}Prochaines √©tapes :${NC}"
echo "   1. V√©rifiez : $SITE_URL/setup-dashboard.php"
echo "   2. Testez l'authentification"
echo "   3. V√©rifiez les logs en cas de probl√®me"
echo ""

# ================================
# Option : Ouvrir dans le navigateur
# ================================
read -p "Voulez-vous ouvrir l'application dans le navigateur ? (o/N) " -n 1 -r
echo
if [[ $REPLY =~ ^[Oo]$ ]]; then
    if command -v open &> /dev/null; then
        open "$SITE_URL/setup-dashboard.php"
    elif command -v xdg-open &> /dev/null; then
        xdg-open "$SITE_URL/setup-dashboard.php"
    else
        echo -e "${BLUE}Ouvrez manuellement : $SITE_URL/setup-dashboard.php${NC}"
    fi
fi

echo ""
echo -e "${GREEN}‚ú® D√©ploiement termin√© avec succ√®s !${NC}"

